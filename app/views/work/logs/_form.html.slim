- form_url = @work_log.persisted? ? payout_path(@work_log) : work_logs_path
- submit_label = @work_log.persisted? ? "Update record" : "Create record"

- workers_options = options_from_collection_for_select(@workers, :id, :title, @work_log.worker_id)
- requirements_options = @requirements.map { |req| ["#{req.project.title} - #{req.title}", req.id] }
- kinds = AppConfig.work_logs.to_h { |k, v| [v.comment, k] }

= form_for(@work_log, url: form_url) do |f|
  table style="border-collapse: collapse"
    tbody
      tr
        th = @work_log.column_comments[:worker_id]
        td = f.select(:worker_id, workers_options)
      tr
        th = @work_log.column_comments[:requirement_id]
        td = f.select(:requirement_id, options_for_select(requirements_options, @work_log.requirement_id))
      tr
        th = @work_log.column_comments[:started_at]
        td = f.date_field(:started_at, min: Date.new(2024, 9, 1))
      tr
        th = @work_log.column_comments[:ended_at]
        td = f.date_field(:ended_at, min: Date.new(2024, 9, 1))
      tr
        th = @work_log.column_comments[:kind]
        td = f.select(:kind, kinds)
      tr
        th = @work_log.column_comments[:planned_duration]
        td = f.number_field(:planned_duration, min: 0, step: 0.01)
    tfoot
      tr
        td colspan="2" = f.submit(submit_label)
